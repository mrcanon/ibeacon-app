// Form validation states
//
// Used in forms.less to generate the form validation CSS for warnings, errors,
// and successes.

@mixin form-control-validation($base-font-color: #555, $border-color: #ccc, $background-color: #f5f5f5) {
  // Color the label and help text
  .help-block,
  .control-label,
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline,
  &.radio label,
  &.checkbox label,
  &.radio-inline label,
  &.checkbox-inline label  {
    color: $base-font-color;
  }
  // Set the border and box shadow on specific inputs to match
  .form-control {
    border-color: $border-color;
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work
    &:focus {
      border-color: darken($border-color, 10%);
      $shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($border-color, 20%);
      @include box-shadow($shadow);
    }
  }
  // Set validation states also for addons
  .input-group-addon {
    color: $base-font-color;
    border-color: $border-color;
    background-color: $background-color;
  }
  // Optional feedback icon
  .form-control-feedback {
    color: $base-font-color;
  }
}


// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-border-focus` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus($color: $input-border-focus) {
  $color-rgba: rgba($color, .6);
  &:focus {
    border-color: $color;
    outline: 0;
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 3px $color-rgba);
  }
}

// Form control sizing
//
// Relative text size, padding, and border-radii changes for form controls. For
// horizontal sizing, wrap controls in the predefined grid classes. `<select>`
// element gets special love because it's special, and that's a fact!
// [converter] $parent hack
@mixin input-size($parent, $input-height, $padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  #{$parent} {
    height: $input-height;
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    line-height: $line-height;
    border-radius: $border-radius;
  }

  select#{$parent} {
    height: $input-height;
    line-height: $input-height;
  }

  textarea#{$parent},
  select[multiple]#{$parent} {
    height: auto;
  }
}

@mixin input-checkbox {
  /* Base for label styling */
  &[type='checkbox']:not(:checked),
  &[type='checkbox']:checked {
    position: absolute;
    left: -9999px;

    & + label {
      position: relative;
      padding-left: 25px;
      cursor: pointer;

      /* checkbox aspect */
      &:before {
        border: 2px solid $legend-border-color;
        border-radius: 4px;
        box-shadow: inset 0 1px 3px rgba(0,0,0,.1);
        content: '';
        height: 18px;
        left: 0;
        position: absolute;
        top: 0;
        width: 18px;
      }

      /* checked mark aspect */
      &:after {
        @include transition(all .2s);
        color: $color-primary;
        content: 'âœ”';
        font-size: 15px;
        left: 3px;
        line-height: 0.8;
        position: absolute;
        top: 2px;
      }
    }
  }
  /* checked mark aspect changes */
  &[type='checkbox']:not(:checked) {
    + label:after {
      opacity: 0;
      transform: scale(0);
    }
  }

  &[type='checkbox']:checked {
    + label:after {
      opacity: 1;
      transform: scale(1);
    }
  }
}
